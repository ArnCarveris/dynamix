[/
 DynaMix
 Copyright (c) 2013-2016 Borislav Stanimirov, Zahary Karadjov

 Distributed under the MIT Software License
 See accompanying file LICENSE.txt or copy at
 https://opensource.org/licenses/MIT
/]

[section:using Using DynaMix]

[section:platforms Platforms]
The library has been (and continues to be) developed and tested with and 32 and
64 bit builds with the compilers:

* On Windows: Visual C++ 12 (2013), Visual C++ 14 (2015), mingw-gcc 5.1.0
* On Linux: gcc 4.6.3, gcc 4.7, clang 3.0
* On OSX and iOS: clang 3.0 (XCode 4.2)
* On Android: arm-gcc 4.6.1

Other C++11 compliant compilers will most likely also work

[endsect]

[section:dependencies Dependencies]

The library has no external dependencies other than the standard C++ libraries.

[endsect]

[section:getting Getting the library]
You can get DynaMix from [@https://github.com/iboB/dynamix its
official repository at GitHub].
[endsect]

[section:building Building the library]

[section:standalone As a standalone library]

A `CMakeLists.txt` file for `CMake` is provided for the library.

If you want something else, all you need to do is compile and link all the
`.cpp` files from the `src` directory.

[endsect]

[section:config Configuration]

Here is a list of the configuration options from `config.hpp`. You need to
rebiuld the library if you change any of those.

* `DYNAMIX_USE_TYPEID` - determines the way by which the mixin class names
are obtained by the library. The default value is nonzero which makes use of
C++'s Runtime type information (RTTI): `typeid` and `type_info`. If you set it
to zero, then, in order for your code to compile, every mixin type will need
to have a public static method -- `static const char* dynamix_mixin_name()`  --
which returns a unique string for a class.
* `DYNAMIX_MAX_MIXINS` - determines the maximum number of mixins that can be
registered in an application.
* `DYNAMIX_MAX_MESSAGES` - determines the maximum number of messages that can
be registered in an application.

[endsect]

[endsect]

[section:using Using the library]

To use the library in your programs, you only need to include its main header:
`dynamix/dynamix.hpp`.

No special initialization or deinitialization code is needed.

[endsect]

[section:contact Contacts]

For questions and comments you're welcome to use the [@https://github.com/iboB/dynamix/issues
GitHub issue tracker of the library].

[endsect]

[endsect]
